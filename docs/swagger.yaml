basePath: /
definitions:
  handlers.JWTOutput:
    properties:
      expires:
        type: string
      token:
        type: string
    type: object
  models.AddUpdateRecipe:
    properties:
      ingredients:
        example:
        - 2 1/4 cups all-purpose flour
        - 1 tsp baking soda
        - 1 cup butter
        - 3/4 cup granulated sugar
        - 3/4 cup brown sugar
        - 2 large eggs
        - 2 cups semi-sweet chocolate chips
        items:
          type: string
        type: array
      instructions:
        example:
        - Preheat oven to 375째F (190째C)
        - Mix dry ingredients
        - Cream butter and sugars
        - Beat in eggs
        - Stir in chocolate chips
        - Drop spoonfuls onto baking sheets
        - Bake for 9 to 11 minutes
        items:
          type: string
        type: array
      name:
        example: Chocolate Chip Cookies
        type: string
      tags:
        example:
        - dessert
        - snack
        items:
          type: string
        type: array
    required:
    - ingredients
    - instructions
    - name
    - tags
    type: object
  models.ErrorResponse:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  models.ListRecipes:
    properties:
      count:
        type: integer
      data:
        items:
          $ref: '#/definitions/models.ViewRecipe'
        type: array
    type: object
  models.User:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  models.ViewRecipe:
    properties:
      id:
        example: c0283p3d0cvuglq85log
        type: string
      ingredients:
        example:
        - 2 1/4 cups all-purpose flour
        - 1 tsp baking soda
        - 1 cup butter
        - 3/4 cup granulated sugar
        - 3/4 cup brown sugar
        - 2 large eggs
        - 2 cups semi-sweet chocolate chips
        items:
          type: string
        type: array
      instructions:
        example:
        - Preheat oven to 375째F (190째C)
        - Mix dry ingredients
        - Cream butter and sugars
        - Beat in eggs
        - Stir in chocolate chips
        - Drop spoonfuls onto baking sheets
        - Bake for 9 to 11 minutes
        items:
          type: string
        type: array
      name:
        example: Chocolate Chip Cookies
        type: string
      published_at:
        example: "2023-03-10T15:04:05Z"
        type: string
      tags:
        example:
        - dessert
        - snack
        items:
          type: string
        type: array
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a simple API for managing recipes.
  title: Recipes API
  version: "1.0"
paths:
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Refresh an existing JWT token and return a new one
      parameters:
      - description: '{token}'
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.JWTOutput'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Refresh JWT token
      tags:
      - auth
  /auth/signin:
    post:
      consumes:
      - application/json
      description: Authenticate a user and return a JWT token
      parameters:
      - description: User Credentials
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.JWTOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Sign in a user
      tags:
      - auth
  /auth/signup:
    post:
      consumes:
      - application/json
      description: Create a new user account
      parameters:
      - description: User Sign Up
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Sign up a new user
      tags:
      - auth
  /recipes:
    get:
      consumes:
      - application/json
      description: Get a list of all recipes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ListRecipes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: List all recipes
      tags:
      - recipes
    post:
      consumes:
      - application/json
      description: Create a new recipe
      parameters:
      - description: Add Recipe
        in: body
        name: recipe
        required: true
        schema:
          $ref: '#/definitions/models.AddUpdateRecipe'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a new recipe
      tags:
      - recipes
  /recipes/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a recipe
      parameters:
      - description: Recipe ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete a recipe
      tags:
      - recipes
    get:
      consumes:
      - application/json
      description: Get details of a specific recipe by its ID
      parameters:
      - description: Recipe ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ViewRecipe'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get a recipe by ID
      tags:
      - recipes
    put:
      consumes:
      - application/json
      description: Update a recipe
      parameters:
      - description: Recipe ID
        in: path
        name: id
        required: true
        type: string
      - description: Update Recipe
        in: body
        name: recipe
        required: true
        schema:
          $ref: '#/definitions/models.AddUpdateRecipe'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update a recipe
      tags:
      - recipes
  /recipes/search:
    get:
      consumes:
      - application/json
      description: Search recipes by tag
      parameters:
      - description: Tag to search for
        in: query
        name: tag
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ListRecipes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Search recipes by tag
      tags:
      - recipes
swagger: "2.0"
